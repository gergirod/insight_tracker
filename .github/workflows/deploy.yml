name: Deploy to DigitalOcean

on:
  push:
    branches:
      - master  # Trigger deployment on push to the main branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'  # Specify your Python version

    - name: Install Poetry
      run: curl -sSL https://install.python-poetry.org | python3 -

    - name: Install dependencies
      run: poetry install


    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.DO_SSH_KEY }}

    - name: Deploy to DigitalOcean
      env:
          HOST: ${{ secrets.DO_HOST }}
          USER: ${{ secrets.DO_USER }}
          SSH_KEY: ${{ secrets.DO_SSH_KEY }}  # SSH private key to access the droplet
      run: |
          echo "$SSH_KEY" > private_key
          chmod 600 private_key
          ssh -i private_key -o StrictHostKeyChecking=no $USER@$HOST << 'EOF'
            set -e  # Exit immediately if a command exits with a non-zero status
  
            # Define variables
            APP_DIR=/var/www/myapp
            LOG_FILE=streamlit.log
            APP_FILE=main.py  # Update to your main Python file
            APP_PORT=80
  
            echo "Navigating to the application directory..."
            cd $APP_DIR
  
            echo "Fetching latest changes from the repository..."
            git pull origin master
  
            echo "Installing dependencies with Poetry..."
            poetry install --no-root
  
            echo "Stopping any running Streamlit instance..."
            pkill -f "streamlit run" || true
  
            echo "Starting the Streamlit app..."
            nohup poetry run streamlit run src/insight_tracker/$APP_FILE --server.port $APP_PORT > $LOG_FILE 2>&1 &
  
            echo "Deployment completed successfully."
          EOF
      shell: bash
  
    - name: Clean up SSH key
      run: rm -f private_key
